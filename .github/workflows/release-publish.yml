name: 'Release: Publish'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'

jobs:
  publish-to-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      create: ${{ steps.check-release.outputs.create }}
      release: ${{ steps.get-version.outputs.release }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Version
        id: get-version
        run: |
          LATEST_TAG=$(curl -s "https://api.github.com/repos/n8n-io/n8n/releases/latest" | jq -r .tag_name)
          if [ -z "${LATEST_TAG}" ] || [ "${LATEST_TAG}" == "null" ]; then
            echo "Failed to get version"
            exit 1
          fi

          # LATEST_TAG=n8n@1.91.3, get 1.91.3
          N8N_VERSION=$(echo "${LATEST_TAG}" | cut -d "@" -f 2)

          echo "release=${N8N_VERSION}" >> $GITHUB_OUTPUT
          echo "N8N_VERSION=${N8N_VERSION}" >> $GITHUB_ENV
          echo ""
          echo "========== Build Args =========="
          echo "N8N_VERSION=${N8N_VERSION}"

      - name: Check Release
        id: check-release
        run: |
          gh release view n8n@${N8N_VERSION} -R ${{ github.repository }} >/dev/null 2>&1 || echo "create=1" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-docker-hub:
    name: Publish to DockerHub
    needs: [publish-to-npm]
    runs-on: ubuntu-latest
    if: needs.publish-to-npm.outputs.create == '1'
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: n8n-io/n8n
          ref: 'n8n@${{ needs.publish-to-npm.outputs.release }}'

      - name: Setup Build
        run: |
          wget -q -O /tmp/Dockerfile https://github.com/${{ github.repository }}/raw/refs/heads/main/Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: .
          file: /tmp/Dockerfile
          build-args: |
            N8N_VERSION=${{ needs.publish-to-npm.outputs.release }}
            N8N_RELEASE_TYPE=stable
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/loong64
          provenance: false
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/n8n:${{ needs.publish-to-npm.outputs.release }}

  create-github-release:
    name: Create a GitHub Release
    needs: [publish-to-npm, publish-to-docker-hub]
    runs-on: ubuntu-latest
    if: needs.publish-to-npm.outputs.create == '1'
    timeout-minutes: 5

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Create a Release on GitHub
        uses: ncipollo/release-action@v1
        with:
          commit: ${{ github.sha }}
          tag: 'n8n@${{ needs.publish-to-npm.outputs.release }}'
          prerelease: false
          makeLatest: false
          body: 'Release n8n@${{ needs.publish-to-npm.outputs.release }}'